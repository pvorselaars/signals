@page "/traces"
@rendermode InteractiveServer
@attribute [StreamRendering]
@using Microsoft.EntityFrameworkCore
@inject SignalsDbContext Db

<PageTitle>Traces</PageTitle>

@if (traces == null)
{
    <progress />
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Scope</th>
                <th>Start</th>
                <th>Duration (ms)</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var trace in traces)
            {
                <SpanRow Span="trace" Level="1" />
            }
        </tbody>
    </table>
}

@code {
    private List<Span>? traces;

    protected override async Task OnInitializedAsync()
    {
        traces = await Db.Traces
                         .Where(trace => trace.ParentSpanId == null)
                         .Include(trace => trace.Children)
                         .OrderByDescending(trace => trace.StartTime)
                         .Take(10)
                         .ToListAsync();
    }
}
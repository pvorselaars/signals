@page "/traces"
@attribute [StreamRendering]
@inject SignalsDbContext Db

<PageTitle>Traces</PageTitle>

@if (spans == null)
{
    <progress />
}
else
{
    @foreach (var span in spans)
    {
        <span>traceId: @span.TraceId<br></span>
        <span>spanId: @span.SpanId<br></span>
        <span>parentSpanId: @span.ParentSpanId<br></span>
        <span>name: @span.Name<br></span>
        <span>kind: @span.Kind<br></span>
        <span>startTime: @span.StartTime.ToString("yyyy-dd-MM HH:mm:ss.fff")<br></span>
        <span>endTime: @span.EndTime.ToString("yyyy-dd-MM HH:mm:ss.fff")<br></span>

        @foreach (var a in span.Attributes)
        {
            @a<br>
        }
        <hr>
    }
}

@code {
    private List<Span>? spans;

    protected override async Task OnInitializedAsync()
    {
        spans = await Db.Spans
                        .Include(s => s.Attributes)
                            .ThenInclude(a => a.Key)
                        .Include(s => s.Attributes)
                            .ThenInclude(a => a.Value)
                        .ToListAsync();
    }
}
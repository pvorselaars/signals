@page "/resources"
@inject Store store

<PageTitle>Resources</PageTitle>

@{
}

@foreach (var resource in store.Resources)
{
    bool isSelected = store.SelectedResources.Contains(resource.Key);
    string cssClass = isSelected ? "selected" : "";
    Action clickHandler = isSelected
    ? async () => await store.DeselectResource(resource.Key)
    : async () => await store.SelectResource(resource.Key);

    <article class="@cssClass" @onclick="clickHandler" style="cursor: pointer;">

        <body>
            @foreach (var a in resource.Value.Attributes)
            {
                <span>@a.Key: @a.Value.StringValue<br></span>
            }
        </body>
    </article>
}

@code {
    protected override void OnInitialized()
    {
        store.OnChange += OnStoreChange;
    }

    private async Task OnStoreChange()
    {
        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        store.OnChange -= OnStoreChange;
    }
}